#!/usr/bin/env bash
scriptname=$(basename $0)
scriptdir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cache_file="${HOME}/.ppm.cache"
update_every="1"

# Usage function
usage(){
    echo "Usage: ${scriptname} <command> [options]"
    echo ""
    echo "Commands:"

    for f in ${scriptdir}/commands/*; do
        subcmd=$(basename ${f})
        echo "    ${subcmd}   $(${scriptdir}/commands/${subcmd} description)"
    done
}

# Store argument (command) in variable
command=${1}

# Allow execution of 'cache' even when there is no cache yet
if [[ ! -f ~/.ppm.cache && ${command} != "cache" ]]; then
    echo "NO cache found! Run 'ppm cache' at least once!"
    exit
fi

# Check if cache update is necessary
updated_timestamp=$(cat ${cache_file} | json last_update)
current_timestamp=$(date +%s)
time_diff=$(($current_timestamp-$updated_timestamp))
max_time_diff=$(($update_every*60*60))
if [[ $time_diff > $max_time_diff ]]; then
    echo "Error: Local packal.org cache seems outdated (${time_diff} seconds exceeded)." >&2
    echo "       Run '${scriptname} cache' to update." >&2
    exit
fi

# Execute specific command or show usage information
case ${command} in
    "" | "-h" | "--help")
        usage
        ;;
    *)
        shift
        ${scriptdir}/commands/${command} $@
        if [ $? = 127 ]; then
            echo "Error: '${command}' is not a known command." >&2
            echo "       Run '${scriptname} --help' for a list of known commands." >&2
            exit 1
        fi
        ;;
esac
