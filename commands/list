#!/usr/bin/env php
<?php

/*
 * Include functions
 */

$scriptdir=realpath(dirname(__FILE__));
include($scriptdir.'/../lib/functions.php');
require_once 'Console/Table.php';

/*
 * Check for system arguments
 */

// Describe command
if (isset($argv[1]) && $argv[1] == "description") {
  echo "  List currently installed workflows";
  exit;
}

/*
 * Prepare CLI table
 */

// Construct cli table design
$tbl = new Console_Table();
$tbl->setHeaders(
    array('Workflow', 'Description')
);

/*
 * Read Alfred's plist
 */

// Get possible "syncfolder"
exec('/usr/libexec/PlistBuddy -c "Print syncfolder" ${HOME}/Library/Preferences/com.runningwithcrayons.Alfred-Preferences.plist 2> /dev/null', $retval, $exitcode);

// If error code => no syncfolder set => use "Application Support"
// Otherwise use the custom folder, returned by PlistBuddy
if ($exitcode == 0) {
  $workflow_folder=$retval[0]."/Alfred.alfredpreferences/workflows";
} else {
  $workflow_folder=$_SERVER['HOME']."/Library/Application Support/Alfred 2/Alfred.alfredpreferences/workflows";
}

// Replace tilde with actual home folder
$workflow_folder=str_replace("~", $_SERVER['HOME'], $workflow_folder);

/*
 * Read each workflows plist and render table
 */

// Scan for workflows and exclude hidden files
$workflows = preg_grep('/^([^.])/', scandir($workflow_folder));
foreach($workflows as $workflow) {
  // Parse and store name and description
  $workflow_name=exec('/usr/libexec/PlistBuddy -c "Print name" "'.$workflow_folder.'/'.$workflow.'/Info.plist" 2> /dev/null');
  $workflow_description=exec('/usr/libexec/PlistBuddy -c "Print description" "'.$workflow_folder.'/'.$workflow.'/Info.plist" 2> /dev/null');

  // Limit to specific length
  if (strlen($workflow_description) > 50) {
     $workflow_description = substr($workflow_description, 0, 47) . '...';
  }

  // Add entry table ...
  $tbl->addRow(array($workflow_name, $workflow_description));
}

// ... and display
echo $tbl->getTable();

?>
